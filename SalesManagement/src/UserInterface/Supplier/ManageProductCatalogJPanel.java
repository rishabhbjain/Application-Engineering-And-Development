/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Supplier;

import Business.MarketOfferCatalog;
import Business.Product;
import Business.SalesPerson;
import Business.Supplier;
import Business.SupplierDirectory;
import UserInterface.Administrator.UpdateSalesPersonJPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class ManageProductCatalogJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageProductCatalogJPanel
     */
    private JPanel userProcessContainer;
    private Supplier supplier;
    private Product product;

    ManageProductCatalogJPanel(JPanel userProcessContainer, Supplier supplier) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.supplier = supplier;
       
        System.out.println("HEY"+supplier);
        populateTable1();
        comboboxMarketType.removeAllItems();
        comboboxMarketType.addItem("Educational");
          comboboxMarketType.addItem("Financial");
    }
      public void populateTable1() {
        DefaultTableModel dtm = (DefaultTableModel)tblProduct.getModel();
        dtm.setRowCount(0);
        System.out.println("QQQQQQ");
        for(Product product: supplier.getProductcatalog().getProductlist() ){
            Object [] row = new Object[8];
           row[0]=product;
           row[1]= product.getProductDescription();
           row[2]=product.getProductQuantity();
           System.out.println("POPULATETABLE"+product.getProductQuantity());
           row[3]=product.getProductId();
           row[4]=product.getMarketOffer().getActualPrice();
           row[5] =product.getMarketOffer().getFloorPrice();
           row[6]=product.getMarketOffer().getCeilingPrice();
           row[7]=product.getMarketOffer().getMarketType();
            dtm.addRow(row);
        }
    } 


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        btnCreateProduct = new javax.swing.JButton();
        btnUpdateProduct = new javax.swing.JButton();
        btnDeleteProduct = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        comboboxMarketType = new javax.swing.JComboBox<>();
        btnSearchMarketType = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setText("Product and Market Offer");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, -1, -1));

        tblProduct.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Discription", "Quantity", "ProductId", "Actual Price", "Floor Price", "Ceiling Price", "MarketType"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProduct);
        if (tblProduct.getColumnModel().getColumnCount() > 0) {
            tblProduct.getColumnModel().getColumn(0).setResizable(false);
            tblProduct.getColumnModel().getColumn(1).setResizable(false);
            tblProduct.getColumnModel().getColumn(2).setResizable(false);
            tblProduct.getColumnModel().getColumn(3).setResizable(false);
            tblProduct.getColumnModel().getColumn(4).setResizable(false);
            tblProduct.getColumnModel().getColumn(5).setResizable(false);
            tblProduct.getColumnModel().getColumn(6).setResizable(false);
            tblProduct.getColumnModel().getColumn(7).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 102, 732, 297));

        btnCreateProduct.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnCreateProduct.setText("Create");
        btnCreateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateProductActionPerformed(evt);
            }
        });
        add(btnCreateProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(485, 426, -1, -1));

        btnUpdateProduct.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnUpdateProduct.setText("Update");
        btnUpdateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateProductActionPerformed(evt);
            }
        });
        add(btnUpdateProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(589, 426, -1, -1));

        btnDeleteProduct.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnDeleteProduct.setText("Delete");
        btnDeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteProductActionPerformed(evt);
            }
        });
        add(btnDeleteProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(688, 426, -1, -1));

        btnBack.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 520, -1, -1));

        jLabel2.setText("Market Type :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 90, 20));

        comboboxMarketType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(comboboxMarketType, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 60, 140, -1));

        btnSearchMarketType.setText("Seach");
        btnSearchMarketType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchMarketTypeActionPerformed(evt);
            }
        });
        add(btnSearchMarketType, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 60, 140, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteProductActionPerformed
        // TODO add your handling code here:
              int selectedRow = tblProduct.getSelectedRow();
        if(selectedRow  >= 0) {
           int dialogButton = JOptionPane.YES_NO_OPTION;
           int dialogResult = JOptionPane.showConfirmDialog(null,"Would you like to delete the person details ?","Warning",dialogButton);
           if(dialogResult == JOptionPane.YES_OPTION) {
               Product product = (Product) tblProduct.getValueAt(selectedRow,0);
              supplier.getProductcatalog().deleteProduct(product);
               populateTable1();
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Please select a row from table first","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteProductActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCreateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateProductActionPerformed
        // TODO add your handling code here:
        CreateProductJPanel cp = new CreateProductJPanel(userProcessContainer,supplier);
        userProcessContainer.add("CreateProduct", cp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnCreateProductActionPerformed

    private void btnUpdateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateProductActionPerformed
        // TODO add your handling code here:
         int selectedRow = tblProduct.getSelectedRow();
        if(selectedRow<0) {
                  JOptionPane.showMessageDialog(null, "Please select a row from table to view details","Warning",JOptionPane.WARNING_MESSAGE);

        }
        else {
        Product product =(Product)tblProduct.getValueAt(selectedRow,0);
        UpdateProductJPanel panel = new UpdateProductJPanel(userProcessContainer,product);
        userProcessContainer.add("UpdateSalesPerson",panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnUpdateProductActionPerformed

    private void btnSearchMarketTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchMarketTypeActionPerformed
        // TODO add your handling code here:
              Product result = supplier.getProductcatalog().searchProduct(String.valueOf(comboboxMarketType.getSelectedItem()));
        String r = String.valueOf(comboboxMarketType.getSelectedItem());
        if(result == null) {
               JOptionPane.showMessageDialog(null, "U you entered does not exist","Information",JOptionPane.INFORMATION_MESSAGE);
  
        }
        else {
            DefaultTableModel dtm = (DefaultTableModel) tblProduct.getModel();
            dtm.setRowCount(0);
            for(Product product:supplier.getProductcatalog().getProductlist()) {
                if(product.getMarketOffer().getMarketType().equals(r)) {
                   Object[] row = new Object[8];
                   row[0]=product;
           row[1]= product.getProductDescription();
           row[2]=product.getProductQuantity();
           System.out.println("POPULATETABLE"+product.getProductQuantity());
           row[3]=product.getProductId();
           row[4]=product.getMarketOffer().getActualPrice();
           row[5] =product.getMarketOffer().getFloorPrice();
           row[6]=product.getMarketOffer().getCeilingPrice();
           row[7]=product.getMarketOffer().getMarketType();
            dtm.addRow(row); 
                }
            }
                
            
            
            
            
            
            
        
        
           
        }
    }//GEN-LAST:event_btnSearchMarketTypeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateProduct;
    private javax.swing.JButton btnDeleteProduct;
    private javax.swing.JButton btnSearchMarketType;
    private javax.swing.JButton btnUpdateProduct;
    private javax.swing.JComboBox<String> comboboxMarketType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProduct;
    // End of variables declaration//GEN-END:variables
}
