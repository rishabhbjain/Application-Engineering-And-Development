/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Administrator;

import Business.EmployeeDirectory;
import Business.SalesPerson;
import Business.Supplier;
import java.awt.CardLayout;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author runhzx
 */
public class SalespersonJPanel extends javax.swing.JPanel {

   
    /**
     * Creates new form SalespersonJPanel
     */
    private JPanel userProcessContainer;
    private EmployeeDirectory employeedirectory; 
    SalespersonJPanel(JPanel userProcessContainer, EmployeeDirectory employeedirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.employeedirectory = employeedirectory;
        //displayCsv();
        populateTable();
    }
    
    public void populateTable() {
        int rowcount = SalespersonTable.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel)SalespersonTable.getModel();
//        for(int i=rowcount-1;i>=0;i--){
//            dtm.removeRow(i);
//        }
        
        dtm.setRowCount(0);
        
        for(SalesPerson salesperson: employeedirectory.getSalesPersonList() ){
            Object [] row = new Object[4];
            row[0]=salesperson.getSalesPersonId();
            row[1]=salesperson;
            row[2]=salesperson.getSalesPersonUsername();
            row[3]=salesperson.getSalesPersonPassword();
            dtm.addRow(row);
        }
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtSalespersonId = new javax.swing.JTextField();
        btnSSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        SalespersonTable = new javax.swing.JTable();
        btnSAdd = new javax.swing.JButton();
        btnSDelete = new javax.swing.JButton();
        btnSUpdate = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel2.setText("Salesperson");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(213, 6, -1, -1));

        jLabel1.setText("Salesperson ID:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 53, -1, -1));
        add(txtSalespersonId, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 48, 207, -1));

        btnSSearch.setText("Search >>");
        btnSSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSSearchActionPerformed(evt);
            }
        });
        add(btnSSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(388, 48, -1, -1));

        SalespersonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "User Name", "Password"
            }
        ));
        jScrollPane1.setViewportView(SalespersonTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 89, 597, 244));

        btnSAdd.setText("Create");
        btnSAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSAddActionPerformed(evt);
            }
        });
        add(btnSAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 345, 96, -1));

        btnSDelete.setText("Delete -");
        btnSDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSDeleteActionPerformed(evt);
            }
        });
        add(btnSDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 345, -1, -1));

        btnSUpdate.setText("Update");
        btnSUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSUpdateActionPerformed(evt);
            }
        });
        add(btnSUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(382, 345, 96, -1));

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 411, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSUpdateActionPerformed
        // TODO add your handling code here:
         int selectedRow = SalespersonTable.getSelectedRow();
        if(selectedRow<0) {
                  JOptionPane.showMessageDialog(null, "Please select a row from table to view details","Warning",JOptionPane.WARNING_MESSAGE);

        }
        else {
        SalesPerson salesperson =(SalesPerson)SalespersonTable.getValueAt(selectedRow,1);
        UpdateSalesPersonJPanel panel = new UpdateSalesPersonJPanel(userProcessContainer,salesperson);
        userProcessContainer.add("UpdateSalesPerson",panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
        
    }//GEN-LAST:event_btnSUpdateActionPerformed

    private void btnSAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSAddActionPerformed
        // TODO add your handling code here:
        CreateSalesPersonJPanel csp = new CreateSalesPersonJPanel(userProcessContainer,employeedirectory);
        userProcessContainer.add("CreateSalesPerson", csp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnSAddActionPerformed

    private void btnSDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSDeleteActionPerformed
        // TODO add your handling code here:
             int selectedRow = SalespersonTable.getSelectedRow();
        if(selectedRow  >= 0) {
           int dialogButton = JOptionPane.YES_NO_OPTION;
           int dialogResult = JOptionPane.showConfirmDialog(null,"Would you like to delete the person details ?","Warning",dialogButton);
           if(dialogResult == JOptionPane.YES_OPTION) {
               SalesPerson salesperson = (SalesPerson) SalespersonTable.getValueAt(selectedRow,1);
              employeedirectory.deleteSalesPerson(salesperson);
               populateTable();
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Please select a row from table first","Warning",JOptionPane.WARNING_MESSAGE);
        }
        
        
        
        
        /*
        int row = SalespersonTable.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        SalespersonJPanel s = (SalespersonJPanel) SalespersonTable.getValueAt(row, 0);
        SalespersonJPanel.removeSalesperson(s);
        refreshTable();
*/
    }//GEN-LAST:event_btnSDeleteActionPerformed

    private void btnSSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSSearchActionPerformed
        // TODO add your handling code here:
         SalesPerson result = employeedirectory.searchSalesPerson(Integer.parseInt(txtSalespersonId.getText()));
        int r = Integer.parseInt(txtSalespersonId.getText());

        if(result == null) {
               JOptionPane.showMessageDialog(null, "SalesPersonId you entered does not exist","Information",JOptionPane.INFORMATION_MESSAGE);
  
        }
        else {
            DefaultTableModel dtm = (DefaultTableModel) SalespersonTable.getModel();
                  dtm.setRowCount(0);
            for(SalesPerson salesperson:employeedirectory.getSalesPersonList()){
                if(salesperson.getSalesPersonId() == r) {
                    Object[] row = new Object[4];
                    row[0]=salesperson.getSalesPersonId();
                    row[1]=salesperson;
                    row[2]=salesperson.getSalesPersonUsername();
                    row[3]=salesperson.getSalesPersonPassword();
                    dtm.addRow(row);
                    break;
                }
                
            }  
        }
    }//GEN-LAST:event_btnSSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable SalespersonTable;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSAdd;
    private javax.swing.JButton btnSDelete;
    private javax.swing.JButton btnSSearch;
    private javax.swing.JButton btnSUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtSalespersonId;
    // End of variables declaration//GEN-END:variables

  
}
