/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Administrator;

import Business.Customer;
import Business.Market;
import Business.MarketList;
import Business.SalesPerson;
import java.awt.CardLayout;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author runhzx
 */
public class CustomerJPanel extends javax.swing.JPanel {

    

    /**
     * Creates new form CustomerJPanel
     */
    private JPanel userProcessContainer;
    private MarketList marketList;
   

    CustomerJPanel(JPanel userProcessContainer, MarketList marketlist) {
    initComponents();
    this.userProcessContainer = userProcessContainer;
    this.marketList = marketlist;
  //  displayCsv();
    populateTable();
    }
    public void populateTable() {
        int rowcount = CustomerTable.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel)CustomerTable.getModel();
   
        dtm.setRowCount(0);
        for(Market market: marketList.getMarketList() ){
            
            Object [] row = new Object[4];
            row[0]= market.getCustomer().getCustomerId();
            row[1]= market.getCustomer().getCustomerName();
            row[2]= market.getCustomer().getEmailAddress();
            row[3]=market;
            dtm.addRow(row);
          
        }
         
    

   
        
         
    }
 /*   
 public void displayCsv()
    {
        String csvFile="src/Business/customer.csv";
        String line =" ";
         String cvsSplitBy = ",";
         try(BufferedReader bf = new BufferedReader(new FileReader(csvFile))){
            while((line = bf.readLine())!=null)
             {  
                 String Data[] = line.split(cvsSplitBy);
                 Market market = marketList.addMarket();
                 market.setMarketType(Data[3]);
                 Customer customer = market.getCustomerList().addCustomer();
                 customer.setCustomerId(Integer.parseInt(Data[0]));
                 customer.setCustomerName(Data[1]);
                 customer.setEmailAddress(Data[2]);
             }
        }catch (FileNotFoundException ex) {
            Logger.getLogger(CustomerJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }catch (IOException ex){
                 Logger.getLogger(CustomerJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
                       
    }  
    */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CustomerTable = new javax.swing.JTable();
        btnCAdd = new javax.swing.JButton();
        txtSCustomerId = new javax.swing.JTextField();
        btnCDelete = new javax.swing.JButton();
        btnCSearch = new javax.swing.JButton();
        btnCUpdate = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Customer ID:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 53, -1, -1));

        CustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Email", "Market Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(CustomerTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 89, 716, 244));

        btnCAdd.setText("Create");
        btnCAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnCAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 345, -1, -1));
        jPanel1.add(txtSCustomerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(271, 48, 207, -1));

        btnCDelete.setText("Delete -");
        btnCDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnCDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(323, 345, -1, -1));

        btnCSearch.setText("Search >>");
        btnCSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCSearchActionPerformed(evt);
            }
        });
        jPanel1.add(btnCSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(524, 48, -1, -1));

        btnCUpdate.setText("Update");
        btnCUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnCUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(509, 345, -1, -1));

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel2.setText("Customer");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 6, -1, -1));

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 421, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCAddActionPerformed
        // TODO add your handling code here:
        CreateCustomerJPanel cc = new CreateCustomerJPanel(userProcessContainer,marketList);
        userProcessContainer.add("CreateCustomer", cc);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnCAddActionPerformed

    private void btnCUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCUpdateActionPerformed
        // TODO add your handling code here:
         int selectedRow =CustomerTable.getSelectedRow();
        if(selectedRow<0) {
                  JOptionPane.showMessageDialog(null, "Please select a row from table to view details","Warning",JOptionPane.WARNING_MESSAGE);

        }
        else {
        Market market =(Market)CustomerTable.getValueAt(selectedRow,3);
        UpdateCustomerJPanel panel = new UpdateCustomerJPanel(userProcessContainer,market);
        userProcessContainer.add("UpdateSalesPerson",panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnCUpdateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCDeleteActionPerformed
        // TODO add your handling code here:
              int selectedRow = CustomerTable.getSelectedRow();
        if(selectedRow  >= 0) {
           int dialogButton = JOptionPane.YES_NO_OPTION;
           int dialogResult = JOptionPane.showConfirmDialog(null,"Would you like to delete the person details ?","Warning",dialogButton);
           if(dialogResult == JOptionPane.YES_OPTION) {
               Market market = (Market) CustomerTable.getValueAt(selectedRow,3);
              marketList.deleteMarket(market);
               populateTable();
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Please select a row from table first","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnCDeleteActionPerformed

    private void btnCSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCSearchActionPerformed
        // TODO add your handling code here:
           Market result = marketList.searchMarket(Integer.parseInt(txtSCustomerId.getText()));
        int r = Integer.parseInt(txtSCustomerId.getText());

        if(result == null) {
               JOptionPane.showMessageDialog(null, "CustomerId you entered does not exist","Information",JOptionPane.INFORMATION_MESSAGE);
  
        }
        else {
            DefaultTableModel dtm = (DefaultTableModel) CustomerTable.getModel();
                  dtm.setRowCount(0);
            for(Market market:marketList.getMarketList()){
                if(market.getCustomer().getCustomerId() == r) {
                    Object[] row = new Object[4];
                    row[0]=market.getCustomer().getCustomerId();
                    row[1]=market.getCustomer().getCustomerName();
                    row[2]=market.getCustomer().getEmailAddress();
                    row[3]=market;
                    dtm.addRow(row);
                    break;
                }
                
            }  
        }
    }//GEN-LAST:event_btnCSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CustomerTable;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCAdd;
    private javax.swing.JButton btnCDelete;
    private javax.swing.JButton btnCSearch;
    private javax.swing.JButton btnCUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtSCustomerId;
    // End of variables declaration//GEN-END:variables

//    private void refreshTable() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//    }
}
